version: "3.9"

services:
  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKER_CONNECT: "kafka:9092"
    depends_on:
      - kafka

  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      ALLOW_PLAINTEXT_LISTENER: "yes"

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: yakov
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db


  pub_100_mes_at_min:
    build:
      context: pub_100_mes_at_min
      dockerfile: Dockerfile
    container_name: pub_100_mes_at_min
    environment:
      KAFKA_BROKER: kafka:9092
      MONGODB_COLLECTION: tweets
      MONGODB_USER: IRGC_NEW
      MONGODB_PASSWORD: iran135
      MONGODB_DATABASE: IranMalDB
    ports:
      - "8002:8002"
    depends_on:
      - kafka

  processor:
    build:
      context: processor
      dockerfile: Dockerfile
    container_name: processor
    environment:
      KAFKA_BROKER: kafka:9092
    ports:
      - "8000:8000"
    depends_on:
      - kafka
      - pub_100_mes_at_min

  enricher:
    build:
      context: enricher
      dockerfile: Dockerfile
    container_name: enricher
    environment:
      KAFKA_BROKER: kafka:9092
    ports:
      - "8001:8001"
    depends_on:
      - kafka
      - pub_100_mes_at_min
      - processor

  persister:
    build:
      context: persister
      dockerfile: Dockerfile
    container_name: persister
    environment:
      KAFKA_BROKER: kafka:9092
      MONGODB_USER: admin
      MONGODB_PASSWORD: yakov
      MONGODB_DATABASE: tweets
      MONGODB_HOST: mongodb
      MONGODB_PORT: 27017
      MONGODB_AUTH_DB: admin
    ports:
      - "8003:8003"
    depends_on:
      - kafka
      - mongodb
      - pub_100_mes_at_min
      - processor
      - enricher

  data_retrieval:
    build:
      context: data_retrieval
      dockerfile: Dockerfile
    container_name: data_retrieval
    environment:
      MONGODB_USER: admin
      MONGODB_PASSWORD: yakov
      MONGODB_DATABASE: tweets
      MONGODB_HOST: mongodb
      MONGODB_PORT: 27017
      MONGODB_AUTH_DB: admin
    ports:
      - "8004:8004"
    depends_on:
      - kafka
      - mongodb
      - pub_100_mes_at_min
      - processor
      - enricher
      - persister


volumes:
  mongo_data: